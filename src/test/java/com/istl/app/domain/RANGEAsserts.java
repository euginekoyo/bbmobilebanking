package com.istl.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RANGEAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRANGEAllPropertiesEquals(RANGE expected, RANGE actual) {
        assertRANGEAutoGeneratedPropertiesEquals(expected, actual);
        assertRANGEAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRANGEAllUpdatablePropertiesEquals(RANGE expected, RANGE actual) {
        assertRANGEUpdatableFieldsEquals(expected, actual);
        assertRANGEUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRANGEAutoGeneratedPropertiesEquals(RANGE expected, RANGE actual) {
        assertThat(expected)
            .as("Verify RANGE auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRANGEUpdatableFieldsEquals(RANGE expected, RANGE actual) {
        assertThat(expected)
            .as("Verify RANGE relevant properties")
            .satisfies(e -> assertThat(e.getrANGEFROM()).as("check rANGEFROM").isEqualTo(actual.getrANGEFROM()))
            .satisfies(e -> assertThat(e.getrANGETO()).as("check rANGETO").isEqualTo(actual.getrANGETO()))
            .satisfies(e -> assertThat(e.getaMOUNT()).as("check aMOUNT").isEqualTo(actual.getaMOUNT()))
            .satisfies(e -> assertThat(e.gettXNTYPE()).as("check tXNTYPE").isEqualTo(actual.gettXNTYPE()))
            .satisfies(e -> assertThat(e.gettXNCODE()).as("check tXNCODE").isEqualTo(actual.gettXNCODE()))
            .satisfies(e -> assertThat(e.getcHARGEID()).as("check cHARGEID").isEqualTo(actual.getcHARGEID()))
            .satisfies(e -> assertThat(e.getcHANNEL()).as("check cHANNEL").isEqualTo(actual.getcHANNEL()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRANGEUpdatableRelationshipsEquals(RANGE expected, RANGE actual) {
        // empty method
    }
}

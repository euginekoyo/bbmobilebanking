package com.istl.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CUSTOMERACCOUNTAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUSTOMERACCOUNTAllPropertiesEquals(CUSTOMERACCOUNT expected, CUSTOMERACCOUNT actual) {
        assertCUSTOMERACCOUNTAutoGeneratedPropertiesEquals(expected, actual);
        assertCUSTOMERACCOUNTAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUSTOMERACCOUNTAllUpdatablePropertiesEquals(CUSTOMERACCOUNT expected, CUSTOMERACCOUNT actual) {
        assertCUSTOMERACCOUNTUpdatableFieldsEquals(expected, actual);
        assertCUSTOMERACCOUNTUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUSTOMERACCOUNTAutoGeneratedPropertiesEquals(CUSTOMERACCOUNT expected, CUSTOMERACCOUNT actual) {
        assertThat(expected)
            .as("Verify CUSTOMERACCOUNT auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUSTOMERACCOUNTUpdatableFieldsEquals(CUSTOMERACCOUNT expected, CUSTOMERACCOUNT actual) {
        assertThat(expected)
            .as("Verify CUSTOMERACCOUNT relevant properties")
            .satisfies(e -> assertThat(e.getcUSTOMERID()).as("check cUSTOMERID").isEqualTo(actual.getcUSTOMERID()))
            .satisfies(e -> assertThat(e.getaCCOUNTNUMBER()).as("check aCCOUNTNUMBER").isEqualTo(actual.getaCCOUNTNUMBER()))
            .satisfies(e -> assertThat(e.getaCCOUNTCLASS()).as("check aCCOUNTCLASS").isEqualTo(actual.getaCCOUNTCLASS()))
            .satisfies(e -> assertThat(e.getcUSTOMERNUMBER()).as("check cUSTOMERNUMBER").isEqualTo(actual.getcUSTOMERNUMBER()))
            .satisfies(e -> assertThat(e.getcIF()).as("check cIF").isEqualTo(actual.getcIF()))
            .satisfies(e -> assertThat(e.gettIMELINKED()).as("check tIMELINKED").isEqualTo(actual.gettIMELINKED()))
            .satisfies(e -> assertThat(e.getbLOCKED()).as("check bLOCKED").isEqualTo(actual.getbLOCKED()))
            .satisfies(e -> assertThat(e.getsTOPPED()).as("check sTOPPED").isEqualTo(actual.getsTOPPED()))
            .satisfies(e -> assertThat(e.getdORMANT()).as("check dORMANT").isEqualTo(actual.getdORMANT()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCUSTOMERACCOUNTUpdatableRelationshipsEquals(CUSTOMERACCOUNT expected, CUSTOMERACCOUNT actual) {
        // empty method
    }
}

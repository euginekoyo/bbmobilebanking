package com.istl.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SPSParticipatingCodesAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSPSParticipatingCodesAllPropertiesEquals(SPSParticipatingCodes expected, SPSParticipatingCodes actual) {
        assertSPSParticipatingCodesAutoGeneratedPropertiesEquals(expected, actual);
        assertSPSParticipatingCodesAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSPSParticipatingCodesAllUpdatablePropertiesEquals(
        SPSParticipatingCodes expected,
        SPSParticipatingCodes actual
    ) {
        assertSPSParticipatingCodesUpdatableFieldsEquals(expected, actual);
        assertSPSParticipatingCodesUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSPSParticipatingCodesAutoGeneratedPropertiesEquals(
        SPSParticipatingCodes expected,
        SPSParticipatingCodes actual
    ) {
        assertThat(expected)
            .as("Verify SPSParticipatingCodes auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSPSParticipatingCodesUpdatableFieldsEquals(SPSParticipatingCodes expected, SPSParticipatingCodes actual) {
        assertThat(expected)
            .as("Verify SPSParticipatingCodes relevant properties")
            .satisfies(e -> assertThat(e.getBiccode()).as("check biccode").isEqualTo(actual.getBiccode()))
            .satisfies(e -> assertThat(e.getBicname()).as("check bicname").isEqualTo(actual.getBicname()))
            .satisfies(e -> assertThat(e.getBicstatus()).as("check bicstatus").isEqualTo(actual.getBicstatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSPSParticipatingCodesUpdatableRelationshipsEquals(
        SPSParticipatingCodes expected,
        SPSParticipatingCodes actual
    ) {
        // empty method
    }
}

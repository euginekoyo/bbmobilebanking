package com.istl.app.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicLong;

public class TRANSACTIONSTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));

    public static TRANSACTIONS getTRANSACTIONSSample1() {
        return new TRANSACTIONS()
            .id(1L)
            .pROCESSED(1L)
            .iNCOMINGBITMAP("iNCOMINGBITMAP1")
            .oUTGOINGBITMAP("oUTGOINGBITMAP1")
            .iNMESSAGE("iNMESSAGE1")
            .mESSAGETOCBS("mESSAGETOCBS1")
            .mESSAGEFROMCBS("mESSAGEFROMCBS1")
            .cBSPROCESS(1L)
            .cBSONLINE(1L)
            .cBSRESPONSE("cBSRESPONSE1")
            .rESPONSEMESSAGE("rESPONSEMESSAGE1")
            .rESPONSESENT(1L)
            .cHANNEL("cHANNEL1")
            .oRIGINALDATA("oRIGINALDATA1")
            .fIELD39RESP("fIELD39RESP1")
            .nARRATION("nARRATION1")
            .aUTHORISED(1L)
            .bRANCHCODE("bRANCHCODE1")
            .fIELD39ORIGINAL("fIELD39ORIGINAL1")
            .mESSAGECLASS("mESSAGECLASS1")
            .tXNCODE("tXNCODE1")
            .cURRCODE("cURRCODE1")
            .dEVICE("dEVICE1")
            .bRANCH2("bRANCH21")
            .longERBRANCH(1L)
            .tIMEX("tIMEX1")
            .pOSTED(1L)
            .aTTEMPTS(1L)
            .oRIGINALDATA2("oRIGINALDATA21")
            .cOMMISSION(1L)
            .rESPONSECREATED(1L)
            .oNLINE(1L)
            .oRIGINALDATA3("oRIGINALDATA31")
            .tOSWITCH("tOSWITCH1")
            .fROMSWITCH("fROMSWITCH1")
            .tOCBS("tOCBS1")
            .fROMCBS("fROMCBS1")
            .pOSTINGLEGS(1L)
            .cOMMISSIONTXNCODE("cOMMISSIONTXNCODE1")
            .hOSTREF("hOSTREF1")
            .rEQUESTCREATED(1L)
            .rEQUESTMESSAGE("rEQUESTMESSAGE1")
            .oUTGOINGBITMAPFLEX("oUTGOINGBITMAPFLEX1")
            .iNCOMINGBITMAPFLEX("iNCOMINGBITMAPFLEX1")
            .rEQUESTSENT(1L)
            .mINICBS(1L)
            .rEVERSED(1L)
            .oFFLINESENTTOHOST(1L)
            .oFFLINERESPONSE("oFFLINERESPONSE1")
            .sOURCELongERFACE("sOURCELongERFACE1")
            .mTIRRN("mTIRRN1")
            .hOSTRESPONSECODE("hOSTRESPONSECODE1")
            .fIELD48("fIELD481")
            .sOURCE("sOURCE1");
    }

    public static TRANSACTIONS getTRANSACTIONSSample2() {
        return new TRANSACTIONS()
            .id(2L)
            .pROCESSED(2L)
            .iNCOMINGBITMAP("iNCOMINGBITMAP2")
            .oUTGOINGBITMAP("oUTGOINGBITMAP2")
            .iNMESSAGE("iNMESSAGE2")
            .mESSAGETOCBS("mESSAGETOCBS2")
            .mESSAGEFROMCBS("mESSAGEFROMCBS2")
            .cBSPROCESS(2L)
            .cBSONLINE(2L)
            .cBSRESPONSE("cBSRESPONSE2")
            .rESPONSEMESSAGE("rESPONSEMESSAGE2")
            .rESPONSESENT(2L)
            .cHANNEL("cHANNEL2")
            .oRIGINALDATA("oRIGINALDATA2")
            .fIELD39RESP("fIELD39RESP2")
            .nARRATION("nARRATION2")
            .aUTHORISED(2L)
            .bRANCHCODE("bRANCHCODE2")
            .fIELD39ORIGINAL("fIELD39ORIGINAL2")
            .mESSAGECLASS("mESSAGECLASS2")
            .tXNCODE("tXNCODE2")
            .cURRCODE("cURRCODE2")
            .dEVICE("dEVICE2")
            .bRANCH2("bRANCH22")
            .longERBRANCH(2L)
            .tIMEX("tIMEX2")
            .pOSTED(2L)
            .aTTEMPTS(2L)
            .oRIGINALDATA2("oRIGINALDATA22")
            .cOMMISSION(2L)
            .rESPONSECREATED(2L)
            .oNLINE(2L)
            .oRIGINALDATA3("oRIGINALDATA32")
            .tOSWITCH("tOSWITCH2")
            .fROMSWITCH("fROMSWITCH2")
            .tOCBS("tOCBS2")
            .fROMCBS("fROMCBS2")
            .pOSTINGLEGS(2L)
            .cOMMISSIONTXNCODE("cOMMISSIONTXNCODE2")
            .hOSTREF("hOSTREF2")
            .rEQUESTCREATED(2L)
            .rEQUESTMESSAGE("rEQUESTMESSAGE2")
            .oUTGOINGBITMAPFLEX("oUTGOINGBITMAPFLEX2")
            .iNCOMINGBITMAPFLEX("iNCOMINGBITMAPFLEX2")
            .rEQUESTSENT(2L)
            .mINICBS(2L)
            .rEVERSED(2L)
            .oFFLINESENTTOHOST(2L)
            .oFFLINERESPONSE("oFFLINERESPONSE2")
            .sOURCELongERFACE("sOURCELongERFACE2")
            .mTIRRN("mTIRRN2")
            .hOSTRESPONSECODE("hOSTRESPONSECODE2")
            .fIELD48("fIELD482")
            .sOURCE("sOURCE2");
    }

    public static TRANSACTIONS getTRANSACTIONSRandomSampleGenerator() {
        return new TRANSACTIONS()
            .id(longCount.incrementAndGet())
            .pROCESSED(longCount.incrementAndGet())
            .iNCOMINGBITMAP(UUID.randomUUID().toString())
            .oUTGOINGBITMAP(UUID.randomUUID().toString())
            .iNMESSAGE(UUID.randomUUID().toString())
            .mESSAGETOCBS(UUID.randomUUID().toString())
            .mESSAGEFROMCBS(UUID.randomUUID().toString())
            .cBSPROCESS(longCount.incrementAndGet())
            .cBSONLINE(longCount.incrementAndGet())
            .cBSRESPONSE(UUID.randomUUID().toString())
            .rESPONSEMESSAGE(UUID.randomUUID().toString())
            .rESPONSESENT(longCount.incrementAndGet())
            .cHANNEL(UUID.randomUUID().toString())
            .oRIGINALDATA(UUID.randomUUID().toString())
            .fIELD39RESP(UUID.randomUUID().toString())
            .nARRATION(UUID.randomUUID().toString())
            .aUTHORISED(longCount.incrementAndGet())
            .bRANCHCODE(UUID.randomUUID().toString())
            .fIELD39ORIGINAL(UUID.randomUUID().toString())
            .mESSAGECLASS(UUID.randomUUID().toString())
            .tXNCODE(UUID.randomUUID().toString())
            .cURRCODE(UUID.randomUUID().toString())
            .dEVICE(UUID.randomUUID().toString())
            .bRANCH2(UUID.randomUUID().toString())
            .longERBRANCH(longCount.incrementAndGet())
            .tIMEX(UUID.randomUUID().toString())
            .pOSTED(longCount.incrementAndGet())
            .aTTEMPTS(longCount.incrementAndGet())
            .oRIGINALDATA2(UUID.randomUUID().toString())
            .cOMMISSION(longCount.incrementAndGet())
            .rESPONSECREATED(longCount.incrementAndGet())
            .oNLINE(longCount.incrementAndGet())
            .oRIGINALDATA3(UUID.randomUUID().toString())
            .tOSWITCH(UUID.randomUUID().toString())
            .fROMSWITCH(UUID.randomUUID().toString())
            .tOCBS(UUID.randomUUID().toString())
            .fROMCBS(UUID.randomUUID().toString())
            .pOSTINGLEGS(longCount.incrementAndGet())
            .cOMMISSIONTXNCODE(UUID.randomUUID().toString())
            .hOSTREF(UUID.randomUUID().toString())
            .rEQUESTCREATED(longCount.incrementAndGet())
            .rEQUESTMESSAGE(UUID.randomUUID().toString())
            .oUTGOINGBITMAPFLEX(UUID.randomUUID().toString())
            .iNCOMINGBITMAPFLEX(UUID.randomUUID().toString())
            .rEQUESTSENT(longCount.incrementAndGet())
            .mINICBS(longCount.incrementAndGet())
            .rEVERSED(longCount.incrementAndGet())
            .oFFLINESENTTOHOST(longCount.incrementAndGet())
            .oFFLINERESPONSE(UUID.randomUUID().toString())
            .sOURCELongERFACE(UUID.randomUUID().toString())
            .mTIRRN(UUID.randomUUID().toString())
            .hOSTRESPONSECODE(UUID.randomUUID().toString())
            .fIELD48(UUID.randomUUID().toString())
            .sOURCE(UUID.randomUUID().toString());
    }
}

package com.istl.app.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicLong;

public class CUSTOMERTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));

    public static CUSTOMER getCUSTOMERSample1() {
        return new CUSTOMER()
            .id(1L)
            .cUSTOMERNAME("cUSTOMERNAME1")
            .pHONENUMBER("pHONENUMBER1")
            .cARDNUMBER("cARDNUMBER1")
            .aCCOUNTNUMBER("aCCOUNTNUMBER1")
            .lANG("lANG1")
            .pIN("pIN1")
            .fIRSTLOGIN("fIRSTLOGIN1")
            .aCTIVE("aCTIVE1")
            .rEGISTERED(1L)
            .cSTDELETE(1L)
            .aLERTENABLED(1L)
            .rEMARK("rEMARK1")
            .iMSI("iMSI1")
            .pARTIALLYREGISTERED("pARTIALLYREGISTERED1")
            .aPPROVEDBY("aPPROVEDBY1")
            .dECLINEDBY("dECLINEDBY1")
            .cHECKERREMARKS("cHECKERREMARKS1")
            .pOSTALADDRESS("pOSTALADDRESS1")
            .rESIDENCE("rESIDENCE1")
            .cREATEDBY("cREATEDBY1")
            .eMAILADDRESS("eMAILADDRESS1")
            .iDENTIFICATIONID("iDENTIFICATIONID1")
            .aCLINKINGINSTITUTION("aCLINKINGINSTITUTION1")
            .dEACTIVATEDBY("dEACTIVATEDBY1")
            .pHONENOCHANGEDBY("pHONENOCHANGEDBY1")
            .oRIGINALPHONENO("oRIGINALPHONENO1")
            .nEWPHONENO("nEWPHONENO1")
            .rESETINGINSTITUTION("rESETINGINSTITUTION1")
            .pINRESETREMARK("pINRESETREMARK1")
            .rESETBY("rESETBY1")
            .uNBLOCKINGINSTITUTION("uNBLOCKINGINSTITUTION1")
            .pINBLOCKBY("pINBLOCKBY1")
            .pINBLOCKREMARKS("pINBLOCKREMARKS1")
            .bLOCKINGINSTITUTION("bLOCKINGINSTITUTION1")
            .pINUNBLOCKBY("pINUNBLOCKBY1")
            .lOGGEDIN(1L)
            .tRIALS("tRIALS1")
            .iDTYPE("iDTYPE1")
            .iDNUMBER("iDNUMBER1")
            .gENDER("gENDER1")
            .cIF("cIF1")
            .rEMARKS("rEMARKS1")
            .iMSIRESETBY("iMSIRESETBY1")
            .fIRSTNAME("fIRSTNAME1")
            .sECONDNAME("sECONDNAME1")
            .lASTNAME("lASTNAME1")
            .pINBLOCKTIME("pINBLOCKTIME1")
            .cUSTOMERSTATUS("cUSTOMERSTATUS1")
            .uSERNAME("uSERNAME1")
            .pASSWORD("pASSWORD1")
            .dEVICEID("dEVICEID1")
            .cHANNEL("cHANNEL1")
            .pASSRESETBY("pASSRESETBY1")
            .pASSBLOCKBY("pASSBLOCKBY1")
            .pASSRESETREMARKS("pASSRESETREMARKS1")
            .pASSBLOCKREMARKS("pASSBLOCKREMARKS1")
            .pASSUNBLOCKBY("pASSUNBLOCKBY1")
            .aPPACTIVE(1L)
            .lASTLOGIN("lASTLOGIN1")
            .dISABLEBY("dISABLEBY1")
            .aPPROVEDISABLEBY("aPPROVEDISABLEBY1")
            .eNABLEBY("eNABLEBY1")
            .aPPROVEDENABLEBY("aPPROVEDENABLEBY1")
            .aPPFIRSTLOGIN("aPPFIRSTLOGIN1")
            .sHORCUTS("sHORCUTS1")
            .mARKEDACTIVATE("mARKEDACTIVATE1")
            .tOWN("tOWN1")
            .dELETEDBY("dELETEDBY1")
            .qUESTIONSASKED("qUESTIONSASKED1")
            .qUESTIONSTRIALS("qUESTIONSTRIALS1")
            .qUESTIONSANSWERED("qUESTIONSANSWERED1")
            .aCTIVATEDBY("aCTIVATEDBY1")
            .bRANCHCODE("bRANCHCODE1");
    }

    public static CUSTOMER getCUSTOMERSample2() {
        return new CUSTOMER()
            .id(2L)
            .cUSTOMERNAME("cUSTOMERNAME2")
            .pHONENUMBER("pHONENUMBER2")
            .cARDNUMBER("cARDNUMBER2")
            .aCCOUNTNUMBER("aCCOUNTNUMBER2")
            .lANG("lANG2")
            .pIN("pIN2")
            .fIRSTLOGIN("fIRSTLOGIN2")
            .aCTIVE("aCTIVE2")
            .rEGISTERED(2L)
            .cSTDELETE(2L)
            .aLERTENABLED(2L)
            .rEMARK("rEMARK2")
            .iMSI("iMSI2")
            .pARTIALLYREGISTERED("pARTIALLYREGISTERED2")
            .aPPROVEDBY("aPPROVEDBY2")
            .dECLINEDBY("dECLINEDBY2")
            .cHECKERREMARKS("cHECKERREMARKS2")
            .pOSTALADDRESS("pOSTALADDRESS2")
            .rESIDENCE("rESIDENCE2")
            .cREATEDBY("cREATEDBY2")
            .eMAILADDRESS("eMAILADDRESS2")
            .iDENTIFICATIONID("iDENTIFICATIONID2")
            .aCLINKINGINSTITUTION("aCLINKINGINSTITUTION2")
            .dEACTIVATEDBY("dEACTIVATEDBY2")
            .pHONENOCHANGEDBY("pHONENOCHANGEDBY2")
            .oRIGINALPHONENO("oRIGINALPHONENO2")
            .nEWPHONENO("nEWPHONENO2")
            .rESETINGINSTITUTION("rESETINGINSTITUTION2")
            .pINRESETREMARK("pINRESETREMARK2")
            .rESETBY("rESETBY2")
            .uNBLOCKINGINSTITUTION("uNBLOCKINGINSTITUTION2")
            .pINBLOCKBY("pINBLOCKBY2")
            .pINBLOCKREMARKS("pINBLOCKREMARKS2")
            .bLOCKINGINSTITUTION("bLOCKINGINSTITUTION2")
            .pINUNBLOCKBY("pINUNBLOCKBY2")
            .lOGGEDIN(2L)
            .tRIALS("tRIALS2")
            .iDTYPE("iDTYPE2")
            .iDNUMBER("iDNUMBER2")
            .gENDER("gENDER2")
            .cIF("cIF2")
            .rEMARKS("rEMARKS2")
            .iMSIRESETBY("iMSIRESETBY2")
            .fIRSTNAME("fIRSTNAME2")
            .sECONDNAME("sECONDNAME2")
            .lASTNAME("lASTNAME2")
            .pINBLOCKTIME("pINBLOCKTIME2")
            .cUSTOMERSTATUS("cUSTOMERSTATUS2")
            .uSERNAME("uSERNAME2")
            .pASSWORD("pASSWORD2")
            .dEVICEID("dEVICEID2")
            .cHANNEL("cHANNEL2")
            .pASSRESETBY("pASSRESETBY2")
            .pASSBLOCKBY("pASSBLOCKBY2")
            .pASSRESETREMARKS("pASSRESETREMARKS2")
            .pASSBLOCKREMARKS("pASSBLOCKREMARKS2")
            .pASSUNBLOCKBY("pASSUNBLOCKBY2")
            .aPPACTIVE(2L)
            .lASTLOGIN("lASTLOGIN2")
            .dISABLEBY("dISABLEBY2")
            .aPPROVEDISABLEBY("aPPROVEDISABLEBY2")
            .eNABLEBY("eNABLEBY2")
            .aPPROVEDENABLEBY("aPPROVEDENABLEBY2")
            .aPPFIRSTLOGIN("aPPFIRSTLOGIN2")
            .sHORCUTS("sHORCUTS2")
            .mARKEDACTIVATE("mARKEDACTIVATE2")
            .tOWN("tOWN2")
            .dELETEDBY("dELETEDBY2")
            .qUESTIONSASKED("qUESTIONSASKED2")
            .qUESTIONSTRIALS("qUESTIONSTRIALS2")
            .qUESTIONSANSWERED("qUESTIONSANSWERED2")
            .aCTIVATEDBY("aCTIVATEDBY2")
            .bRANCHCODE("bRANCHCODE2");
    }

    public static CUSTOMER getCUSTOMERRandomSampleGenerator() {
        return new CUSTOMER()
            .id(longCount.incrementAndGet())
            .cUSTOMERNAME(UUID.randomUUID().toString())
            .pHONENUMBER(UUID.randomUUID().toString())
            .cARDNUMBER(UUID.randomUUID().toString())
            .aCCOUNTNUMBER(UUID.randomUUID().toString())
            .lANG(UUID.randomUUID().toString())
            .pIN(UUID.randomUUID().toString())
            .fIRSTLOGIN(UUID.randomUUID().toString())
            .aCTIVE(UUID.randomUUID().toString())
            .rEGISTERED(longCount.incrementAndGet())
            .cSTDELETE(longCount.incrementAndGet())
            .aLERTENABLED(longCount.incrementAndGet())
            .rEMARK(UUID.randomUUID().toString())
            .iMSI(UUID.randomUUID().toString())
            .pARTIALLYREGISTERED(UUID.randomUUID().toString())
            .aPPROVEDBY(UUID.randomUUID().toString())
            .dECLINEDBY(UUID.randomUUID().toString())
            .cHECKERREMARKS(UUID.randomUUID().toString())
            .pOSTALADDRESS(UUID.randomUUID().toString())
            .rESIDENCE(UUID.randomUUID().toString())
            .cREATEDBY(UUID.randomUUID().toString())
            .eMAILADDRESS(UUID.randomUUID().toString())
            .iDENTIFICATIONID(UUID.randomUUID().toString())
            .aCLINKINGINSTITUTION(UUID.randomUUID().toString())
            .dEACTIVATEDBY(UUID.randomUUID().toString())
            .pHONENOCHANGEDBY(UUID.randomUUID().toString())
            .oRIGINALPHONENO(UUID.randomUUID().toString())
            .nEWPHONENO(UUID.randomUUID().toString())
            .rESETINGINSTITUTION(UUID.randomUUID().toString())
            .pINRESETREMARK(UUID.randomUUID().toString())
            .rESETBY(UUID.randomUUID().toString())
            .uNBLOCKINGINSTITUTION(UUID.randomUUID().toString())
            .pINBLOCKBY(UUID.randomUUID().toString())
            .pINBLOCKREMARKS(UUID.randomUUID().toString())
            .bLOCKINGINSTITUTION(UUID.randomUUID().toString())
            .pINUNBLOCKBY(UUID.randomUUID().toString())
            .lOGGEDIN(longCount.incrementAndGet())
            .tRIALS(UUID.randomUUID().toString())
            .iDTYPE(UUID.randomUUID().toString())
            .iDNUMBER(UUID.randomUUID().toString())
            .gENDER(UUID.randomUUID().toString())
            .cIF(UUID.randomUUID().toString())
            .rEMARKS(UUID.randomUUID().toString())
            .iMSIRESETBY(UUID.randomUUID().toString())
            .fIRSTNAME(UUID.randomUUID().toString())
            .sECONDNAME(UUID.randomUUID().toString())
            .lASTNAME(UUID.randomUUID().toString())
            .pINBLOCKTIME(UUID.randomUUID().toString())
            .cUSTOMERSTATUS(UUID.randomUUID().toString())
            .uSERNAME(UUID.randomUUID().toString())
            .pASSWORD(UUID.randomUUID().toString())
            .dEVICEID(UUID.randomUUID().toString())
            .cHANNEL(UUID.randomUUID().toString())
            .pASSRESETBY(UUID.randomUUID().toString())
            .pASSBLOCKBY(UUID.randomUUID().toString())
            .pASSRESETREMARKS(UUID.randomUUID().toString())
            .pASSBLOCKREMARKS(UUID.randomUUID().toString())
            .pASSUNBLOCKBY(UUID.randomUUID().toString())
            .aPPACTIVE(longCount.incrementAndGet())
            .lASTLOGIN(UUID.randomUUID().toString())
            .dISABLEBY(UUID.randomUUID().toString())
            .aPPROVEDISABLEBY(UUID.randomUUID().toString())
            .eNABLEBY(UUID.randomUUID().toString())
            .aPPROVEDENABLEBY(UUID.randomUUID().toString())
            .aPPFIRSTLOGIN(UUID.randomUUID().toString())
            .sHORCUTS(UUID.randomUUID().toString())
            .mARKEDACTIVATE(UUID.randomUUID().toString())
            .tOWN(UUID.randomUUID().toString())
            .dELETEDBY(UUID.randomUUID().toString())
            .qUESTIONSASKED(UUID.randomUUID().toString())
            .qUESTIONSTRIALS(UUID.randomUUID().toString())
            .qUESTIONSANSWERED(UUID.randomUUID().toString())
            .aCTIVATEDBY(UUID.randomUUID().toString())
            .bRANCHCODE(UUID.randomUUID().toString());
    }
}

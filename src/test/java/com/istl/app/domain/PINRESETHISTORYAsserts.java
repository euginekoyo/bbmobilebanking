package com.istl.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PinResetHistoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPinResetHistoryAllPropertiesEquals(PinResetHistory expected, PinResetHistory actual) {
        assertPinResetHistoryAutoGeneratedPropertiesEquals(expected, actual);
        assertPinResetHistoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPinResetHistoryAllUpdatablePropertiesEquals(PinResetHistory expected, PinResetHistory actual) {
        assertPinResetHistoryUpdatableFieldsEquals(expected, actual);
        assertPinResetHistoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPinResetHistoryAutoGeneratedPropertiesEquals(PinResetHistory expected, PinResetHistory actual) {
        assertThat(expected)
            .as("Verify PinResetHistory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPinResetHistoryUpdatableFieldsEquals(PinResetHistory expected, PinResetHistory actual) {
        assertThat(expected)
            .as("Verify PinResetHistory relevant properties")
            .satisfies(e -> assertThat(e.getPhonenumber()).as("check phonenumber").isEqualTo(actual.getPhonenumber()))
            .satisfies(e -> assertThat(e.getCustomername()).as("check customername").isEqualTo(actual.getCustomername()))
            .satisfies(e -> assertThat(e.getPinblockedon()).as("check pinblockedon").isEqualTo(actual.getPinblockedon()))
            .satisfies(e -> assertThat(e.getPinblockremarks()).as("check pinblockremarks").isEqualTo(actual.getPinblockremarks()))
            .satisfies(e -> assertThat(e.getPinresetby()).as("check pinresetby").isEqualTo(actual.getPinresetby()))
            .satisfies(e -> assertThat(e.getPinreseton()).as("check pinreseton").isEqualTo(actual.getPinreseton()))
            .satisfies(e -> assertThat(e.getPinresetapprovedby()).as("check pinresetapprovedby").isEqualTo(actual.getPinresetapprovedby()))
            .satisfies(e -> assertThat(e.getPinresetapprovedon()).as("check pinresetapprovedon").isEqualTo(actual.getPinresetapprovedon()))
            .satisfies(e -> assertThat(e.getPinresetremarks()).as("check pinresetremarks").isEqualTo(actual.getPinresetremarks()))
            .satisfies(e -> assertThat(e.getBranchcode()).as("check branchcode").isEqualTo(actual.getBranchcode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPinResetHistoryUpdatableRelationshipsEquals(PinResetHistory expected, PinResetHistory actual) {
        // empty method
    }
}

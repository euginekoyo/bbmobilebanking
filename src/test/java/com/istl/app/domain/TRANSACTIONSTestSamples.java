package com.istl.app.domain;

import com.istl.app.domain.mobileapp.Transactions;
import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicLong;

public class TransactionsTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));

    public static Transactions getTransactionsSample1() {
        return new Transactions()
            .id(1L)
            .processed(1L)
            .incomingbitmap("incomingbitmap1")
            .outgoingbitmap("outgoingbitmap1")
            .inmessage("inmessage1")
            .messagetocbs("messagetocbs1")
            .messagefromcbs("messagefromcbs1")
            .cbsprocess(1L)
            .cbsonline(1L)
            .cbsresponse("cbsresponse1")
            .responsemessage("responsemessage1")
            .responsesent(1L)
            .channel("channel1")
            .originaldata("originaldata1")
            .field39resp("field39resp1")
            .narration("narration1")
            .authorised(1L)
            .branchcode("branchcode1")
            .field39original("field39original1")
            .messageclass("messageclass1")
            .txncode("txncode1")
            .currcode("currcode1")
            .device("device1")
            .branch2("branch21")
            .longerbranch(1L)
            .timex("timex1")
            .posted(1L)
            .attempts(1L)
            .originaldata2("originaldata21")
            .commission(1L)
            .responsecreated(1L)
            .online(1L)
            .originaldata3("originaldata31")
            .toswitch("toswitch1")
            .fromswitch("fromswitch1")
            .tocbs("tocbs1")
            .fromcbs("fromcbs1")
            .postinglegs(1L)
            .commissiontxncode("commissiontxncode1")
            .hostref("hostref1")
            .requestcreated(1L)
            .requestmessage("requestmessage1")
            .outgoingbitmapflex("outgoingbitmapflex1")
            .incomingbitmapflex("incomingbitmapflex1")
            .requestsent(1L)
            .minicbs(1L)
            .reversed(1L)
            .offlinesenttohost(1L)
            .offlineresponse("offlineresponse1")
            .sourceLongerface("sourceLongerface1")
            .mtirrn("mtirrn1")
            .hostresponsecode("hostresponsecode1")
            .field48("field481")
            .source("source1");
    }

    public static Transactions getTransactionsSample2() {
        return new Transactions()
            .id(2L)
            .processed(2L)
            .incomingbitmap("incomingbitmap2")
            .outgoingbitmap("outgoingbitmap2")
            .inmessage("inmessage2")
            .messagetocbs("messagetocbs2")
            .messagefromcbs("messagefromcbs2")
            .cbsprocess(2L)
            .cbsonline(2L)
            .cbsresponse("cbsresponse2")
            .responsemessage("responsemessage2")
            .responsesent(2L)
            .channel("channel2")
            .originaldata("originaldata2")
            .field39resp("field39resp2")
            .narration("narration2")
            .authorised(2L)
            .branchcode("branchcode2")
            .field39original("field39original2")
            .messageclass("messageclass2")
            .txncode("txncode2")
            .currcode("currcode2")
            .device("device2")
            .branch2("branch22")
            .longerbranch(2L)
            .timex("timex2")
            .posted(2L)
            .attempts(2L)
            .originaldata2("originaldata22")
            .commission(2L)
            .responsecreated(2L)
            .online(2L)
            .originaldata3("originaldata32")
            .toswitch("toswitch2")
            .fromswitch("fromswitch2")
            .tocbs("tocbs2")
            .fromcbs("fromcbs2")
            .postinglegs(2L)
            .commissiontxncode("commissiontxncode2")
            .hostref("hostref2")
            .requestcreated(2L)
            .requestmessage("requestmessage2")
            .outgoingbitmapflex("outgoingbitmapflex2")
            .incomingbitmapflex("incomingbitmapflex2")
            .requestsent(2L)
            .minicbs(2L)
            .reversed(2L)
            .offlinesenttohost(2L)
            .offlineresponse("offlineresponse2")
            .sourceLongerface("sourceLongerface2")
            .mtirrn("mtirrn2")
            .hostresponsecode("hostresponsecode2")
            .field48("field482")
            .source("source2");
    }

    public static Transactions getTransactionsRandomSampleGenerator() {
        return new Transactions()
            .id(longCount.incrementAndGet())
            .processed(longCount.incrementAndGet())
            .incomingbitmap(UUID.randomUUID().toString())
            .outgoingbitmap(UUID.randomUUID().toString())
            .inmessage(UUID.randomUUID().toString())
            .messagetocbs(UUID.randomUUID().toString())
            .messagefromcbs(UUID.randomUUID().toString())
            .cbsprocess(longCount.incrementAndGet())
            .cbsonline(longCount.incrementAndGet())
            .cbsresponse(UUID.randomUUID().toString())
            .responsemessage(UUID.randomUUID().toString())
            .responsesent(longCount.incrementAndGet())
            .channel(UUID.randomUUID().toString())
            .originaldata(UUID.randomUUID().toString())
            .field39resp(UUID.randomUUID().toString())
            .narration(UUID.randomUUID().toString())
            .authorised(longCount.incrementAndGet())
            .branchcode(UUID.randomUUID().toString())
            .field39original(UUID.randomUUID().toString())
            .messageclass(UUID.randomUUID().toString())
            .txncode(UUID.randomUUID().toString())
            .currcode(UUID.randomUUID().toString())
            .device(UUID.randomUUID().toString())
            .branch2(UUID.randomUUID().toString())
            .longerbranch(longCount.incrementAndGet())
            .timex(UUID.randomUUID().toString())
            .posted(longCount.incrementAndGet())
            .attempts(longCount.incrementAndGet())
            .originaldata2(UUID.randomUUID().toString())
            .commission(longCount.incrementAndGet())
            .responsecreated(longCount.incrementAndGet())
            .online(longCount.incrementAndGet())
            .originaldata3(UUID.randomUUID().toString())
            .toswitch(UUID.randomUUID().toString())
            .fromswitch(UUID.randomUUID().toString())
            .tocbs(UUID.randomUUID().toString())
            .fromcbs(UUID.randomUUID().toString())
            .postinglegs(longCount.incrementAndGet())
            .commissiontxncode(UUID.randomUUID().toString())
            .hostref(UUID.randomUUID().toString())
            .requestcreated(longCount.incrementAndGet())
            .requestmessage(UUID.randomUUID().toString())
            .outgoingbitmapflex(UUID.randomUUID().toString())
            .incomingbitmapflex(UUID.randomUUID().toString())
            .requestsent(longCount.incrementAndGet())
            .minicbs(longCount.incrementAndGet())
            .reversed(longCount.incrementAndGet())
            .offlinesenttohost(longCount.incrementAndGet())
            .offlineresponse(UUID.randomUUID().toString())
            .sourceLongerface(UUID.randomUUID().toString())
            .mtirrn(UUID.randomUUID().toString())
            .hostresponsecode(UUID.randomUUID().toString())
            .field48(UUID.randomUUID().toString())
            .source(UUID.randomUUID().toString());
    }
}
